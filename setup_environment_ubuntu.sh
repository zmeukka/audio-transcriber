#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è Audio Transcriber –≤ Ubuntu 24.04

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–∫—Ä—É–∂–µ–Ω–∏—è Audio Transcriber –¥–ª—è Ubuntu 24.04..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Ubuntu
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
if [[ -f /etc/os-release ]]; then
    . /etc/os-release
    echo "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $NAME $VERSION"
    if [[ "$VERSION_ID" != "24.04" && "$VERSION_ID" != "22.04" && "$VERSION_ID" != "20.04" ]]; then
        print_warning "–°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Ubuntu 20.04+, –Ω–æ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –Ω–∞ –≤–∞—à–µ–π –≤–µ—Ä—Å–∏–∏."
    fi
else
    print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é –û–°. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt update

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo apt install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    ffmpeg \
    git \
    curl \
    build-essential \
    pkg-config \
    libasound2-dev \
    portaudio19-dev \
    libsndfile1-dev

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python..."
PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)
echo "–í–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Python –≤–µ—Ä—Å–∏–∏ 3.8+
PYTHON_MAJOR=$(echo $PYTHON_VERSION | cut -d'.' -f1)
PYTHON_MINOR=$(echo $PYTHON_VERSION | cut -d'.' -f2)

if [[ $PYTHON_MAJOR -lt 3 ]] || [[ $PYTHON_MAJOR -eq 3 && $PYTHON_MINOR -lt 8 ]]; then
    print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ. –ù–∞–π–¥–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
    exit 1
fi

print_status "Python –≤–µ—Ä—Å–∏–∏ $PYTHON_VERSION –ø–æ–¥—Ö–æ–¥–∏—Ç!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ffmpeg
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ffmpeg..."
if command -v ffmpeg &> /dev/null; then
    FFMPEG_VERSION=$(ffmpeg -version | head -n1 | cut -d' ' -f3)
    print_status "ffmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –≤–µ—Ä—Å–∏—è $FFMPEG_VERSION"
else
    print_error "ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏!"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_step "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [[ -d ".venv" ]]; then
    print_warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .venv —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ..."
    rm -rf .venv
fi

python3 -m venv .venv
print_status "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .venv —Å–æ–∑–¥–∞–Ω–æ!"

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_step "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source .venv/bin/activate

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyTorch (—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –≤–µ—Ä—Å–∏–∏)
print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyTorch..."
pip install torch==2.8.0 torchaudio==2.8.0 --index-url https://download.pytorch.org/whl/cpu

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WhisperX
print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WhisperX..."
pip install whisperx

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö Python –ø–∞–∫–µ—Ç–æ–≤..."
pip install pyyaml psutil

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WhisperX
print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WhisperX..."
if python -c "import whisperx; print('WhisperX —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>/dev/null; then
    print_status "WhisperX —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
else
    print_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π WhisperX!"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print_step "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p input output manual models

print_status "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: input/, output/, manual/, models/"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –¥–ª—è UTF-8
print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –¥–ª—è UTF-8..."
cat >> ~/.bashrc << 'EOF'

# Audio Transcriber environment variables
export PYTHONIOENCODING=utf-8
export PYTHONUTF8=1
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
print_step "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏..."
cat > activate_env.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è Audio Transcriber

echo "üéµ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è Audio Transcriber..."

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
export PYTHONIOENCODING=utf-8
export PYTHONUTF8=1
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
echo ""
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  python transcriber.py --test                    # –¢–µ—Å—Ç –Ω–∞ sample.oga"
echo "  python transcriber.py --file input/file.oga     # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
echo "  python transcriber.py                           # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤"
echo ""
echo "–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è: deactivate"
EOF

chmod +x activate_env.sh
print_status "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ./activate_env.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
VENV_PYTHON_VERSION=$(python --version 2>&1)
print_status "Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏: $VENV_PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã:"
pip list | grep -E "(torch|whisperx|pyyaml|psutil)" || true

print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
echo ""
echo -e "${GREEN}==============================================${NC}"
echo -e "${GREEN}üéµ Audio Transcriber —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! üéµ${NC}"
echo -e "${GREEN}==============================================${NC}"
echo ""
echo "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:"
echo "1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
echo -e "   ${BLUE}source ./activate_env.sh${NC}"
echo ""
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç:"
echo -e "   ${BLUE}python transcriber.py --test${NC}"
echo ""
echo "3. –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–≤–æ–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ –ø–∞–ø–∫—É input/ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo -e "   ${BLUE}python transcriber.py${NC}"
echo ""
echo "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:"
echo "- –§–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–º–µ—â–∞–π—Ç–µ –≤ –ø–∞–ø–∫—É input/"
echo "- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –≤ –ø–∞–ø–∫–µ output/"
echo "- –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ–ø–∞–¥—É—Ç –≤ –ø–∞–ø–∫—É manual/"
echo "- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: .mp3, .wav, .m4a, .ogg, .flac, .oga"
echo ""
echo "–î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞:"
echo -e "   ${BLUE}cd $(pwd) && source ./activate_env.sh${NC}"
echo ""
